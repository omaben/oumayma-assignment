"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/react-timezone-select";
exports.ids = ["vendor-chunks/react-timezone-select"];
exports.modules = {

/***/ "(ssr)/./node_modules/react-timezone-select/dist/index.js":
/*!**********************************************************!*\
  !*** ./node_modules/react-timezone-select/dist/index.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   allTimezones: () => (/* binding */ timezone_list_default),\n/* harmony export */   \"default\": () => (/* binding */ TimezoneSelect),\n/* harmony export */   useTimezoneSelect: () => (/* binding */ useTimezoneSelect)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react_select__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! react-select */ \"(ssr)/./node_modules/react-select/dist/react-select.esm.js\");\n/* harmony import */ var spacetime__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! spacetime */ \"(ssr)/./node_modules/spacetime/src/index.js\");\n/* harmony import */ var timezone_soft__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! timezone-soft */ \"(ssr)/./node_modules/timezone-soft/builds/timezone-soft.mjs\");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react/jsx-runtime */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react-jsx-runtime.js\");\n/* __next_internal_client_entry_do_not_use__ allTimezones,default,useTimezoneSelect auto */ var __defProp = Object.defineProperty;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value)=>key in obj ? __defProp(obj, key, {\n        enumerable: true,\n        configurable: true,\n        writable: true,\n        value\n    }) : obj[key] = value;\nvar __spreadValues = (a, b)=>{\n    for(var prop in b || (b = {}))if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n    if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)){\n        if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n    }\n    return a;\n};\nvar __objRest = (source, exclude)=>{\n    var target = {};\n    for(var prop in source)if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0) target[prop] = source[prop];\n    if (source != null && __getOwnPropSymbols) for (var prop of __getOwnPropSymbols(source)){\n        if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop)) target[prop] = source[prop];\n    }\n    return target;\n};\n// src/index.tsx\n\n\n\n\n// src/timezone-list.ts\nvar allTimezones = {\n    \"Pacific/Midway\": \"Midway Island, Samoa\",\n    \"Pacific/Honolulu\": \"Hawaii\",\n    \"America/Juneau\": \"Alaska\",\n    \"America/Boise\": \"Mountain Time\",\n    \"America/Dawson\": \"Dawson, Yukon\",\n    \"America/Chihuahua\": \"Chihuahua, La Paz, Mazatlan\",\n    \"America/Phoenix\": \"Arizona\",\n    \"America/Chicago\": \"Central Time\",\n    \"America/Regina\": \"Saskatchewan\",\n    \"America/Mexico_City\": \"Guadalajara, Mexico City, Monterrey\",\n    \"America/Belize\": \"Central America\",\n    \"America/Detroit\": \"Eastern Time\",\n    \"America/Bogota\": \"Bogota, Lima, Quito\",\n    \"America/Caracas\": \"Caracas, La Paz\",\n    \"America/Santiago\": \"Santiago\",\n    \"America/St_Johns\": \"Newfoundland and Labrador\",\n    \"America/Sao_Paulo\": \"Brasilia\",\n    \"America/Tijuana\": \"Tijuana\",\n    \"America/Montevideo\": \"Montevideo\",\n    \"America/Argentina/Buenos_Aires\": \"Buenos Aires, Georgetown\",\n    \"America/Godthab\": \"Greenland\",\n    \"America/Los_Angeles\": \"Pacific Time\",\n    \"Atlantic/Azores\": \"Azores\",\n    \"Atlantic/Cape_Verde\": \"Cape Verde Islands\",\n    GMT: \"UTC\",\n    \"Europe/London\": \"Edinburgh, London\",\n    \"Europe/Dublin\": \"Dublin\",\n    \"Europe/Lisbon\": \"Lisbon\",\n    \"Africa/Casablanca\": \"Casablanca, Monrovia\",\n    \"Atlantic/Canary\": \"Canary Islands\",\n    \"Europe/Belgrade\": \"Belgrade, Bratislava, Budapest, Ljubljana, Prague\",\n    \"Europe/Sarajevo\": \"Sarajevo, Skopje, Warsaw, Zagreb\",\n    \"Europe/Brussels\": \"Brussels, Copenhagen, Madrid, Paris\",\n    \"Europe/Amsterdam\": \"Amsterdam, Berlin, Bern, Rome, Stockholm, Vienna\",\n    \"Africa/Algiers\": \"West Central Africa\",\n    \"Europe/Bucharest\": \"Bucharest\",\n    \"Africa/Cairo\": \"Cairo\",\n    \"Europe/Helsinki\": \"Helsinki, Kyiv, Riga, Sofia, Tallinn, Vilnius\",\n    \"Europe/Athens\": \"Athens\",\n    \"Asia/Jerusalem\": \"Jerusalem\",\n    \"Africa/Harare\": \"Harare, Pretoria\",\n    \"Europe/Moscow\": \"Istanbul, Minsk, Moscow, St. Petersburg, Volgograd\",\n    \"Asia/Kuwait\": \"Kuwait, Riyadh\",\n    \"Africa/Nairobi\": \"Nairobi\",\n    \"Asia/Baghdad\": \"Baghdad\",\n    \"Asia/Tehran\": \"Tehran\",\n    \"Asia/Dubai\": \"Abu Dhabi, Muscat\",\n    \"Asia/Baku\": \"Baku, Tbilisi, Yerevan\",\n    \"Asia/Kabul\": \"Kabul\",\n    \"Asia/Yekaterinburg\": \"Ekaterinburg\",\n    \"Asia/Karachi\": \"Islamabad, Karachi, Tashkent\",\n    \"Asia/Kolkata\": \"Chennai, Kolkata, Mumbai, New Delhi\",\n    \"Asia/Kathmandu\": \"Kathmandu\",\n    \"Asia/Dhaka\": \"Astana, Dhaka\",\n    \"Asia/Colombo\": \"Sri Jayawardenepura\",\n    \"Asia/Almaty\": \"Almaty, Novosibirsk\",\n    \"Asia/Rangoon\": \"Yangon Rangoon\",\n    \"Asia/Bangkok\": \"Bangkok, Hanoi, Jakarta\",\n    \"Asia/Krasnoyarsk\": \"Krasnoyarsk\",\n    \"Asia/Shanghai\": \"Beijing, Chongqing, Hong Kong SAR, Urumqi\",\n    \"Asia/Kuala_Lumpur\": \"Kuala Lumpur, Singapore\",\n    \"Asia/Taipei\": \"Taipei\",\n    \"Australia/Perth\": \"Perth\",\n    \"Asia/Irkutsk\": \"Irkutsk, Ulaanbaatar\",\n    \"Asia/Seoul\": \"Seoul\",\n    \"Asia/Tokyo\": \"Osaka, Sapporo, Tokyo\",\n    \"Asia/Yakutsk\": \"Yakutsk\",\n    \"Australia/Darwin\": \"Darwin\",\n    \"Australia/Adelaide\": \"Adelaide\",\n    \"Australia/Sydney\": \"Canberra, Melbourne, Sydney\",\n    \"Australia/Brisbane\": \"Brisbane\",\n    \"Australia/Hobart\": \"Hobart\",\n    \"Asia/Vladivostok\": \"Vladivostok\",\n    \"Pacific/Guam\": \"Guam, Port Moresby\",\n    \"Asia/Magadan\": \"Magadan, Solomon Islands, New Caledonia\",\n    \"Asia/Kamchatka\": \"Kamchatka, Marshall Islands\",\n    \"Pacific/Fiji\": \"Fiji Islands\",\n    \"Pacific/Auckland\": \"Auckland, Wellington\",\n    \"Pacific/Tongatapu\": \"Nuku'alofa\"\n};\nvar timezone_list_default = allTimezones;\n// src/index.tsx\n\nfunction useTimezoneSelect({ timezones = timezone_list_default, labelStyle = \"original\", displayValue = \"GMT\", currentDatetime }) {\n    const options = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(()=>{\n        return Object.entries(timezones).map((zone)=>{\n            var _a, _b, _c, _d;\n            try {\n                const now = (currentDatetime ? (0,spacetime__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(currentDatetime) : spacetime__WEBPACK_IMPORTED_MODULE_2__[\"default\"].now()).goto(zone[0]);\n                const isDstString = now.isDST() ? \"daylight\" : \"standard\";\n                const tz = now.timezone();\n                const tzStrings = (0,timezone_soft__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(zone[0]);\n                const abbr = (_b = (_a = tzStrings == null ? void 0 : tzStrings[0]) == null ? void 0 : _a[isDstString]) == null ? void 0 : _b.abbr;\n                const altName = (_d = (_c = tzStrings == null ? void 0 : tzStrings[0]) == null ? void 0 : _c[isDstString]) == null ? void 0 : _d.name;\n                const min = tz.current.offset * 60;\n                const hr = `${min / 60 ^ 0}:${min % 60 === 0 ? \"00\" : Math.abs(min % 60)}`;\n                const prefix = `(${displayValue}${hr.includes(\"-\") ? hr : `+${hr}`}) ${zone[1]}`;\n                let label = \"\";\n                switch(labelStyle){\n                    case \"original\":\n                        label = prefix;\n                        break;\n                    case \"altName\":\n                        label = `${prefix} ${altName ? `(${altName})` : \"\"}`;\n                        break;\n                    case \"abbrev\":\n                        label = `${prefix} ${abbr ? `(${abbr})` : \"\"}`;\n                        break;\n                    case \"offsetHidden\":\n                        label = `${prefix.replace(/^\\(.*?\\)\\s*/, \"\")}`;\n                        break;\n                    default:\n                        label = `${prefix}`;\n                }\n                return {\n                    value: tz.name,\n                    label,\n                    offset: tz.current.offset,\n                    abbrev: abbr,\n                    altName\n                };\n            } catch (e) {\n                return null;\n            }\n        }).filter(Boolean).sort((a, b)=>a.offset - b.offset);\n    }, [\n        labelStyle,\n        timezones,\n        currentDatetime\n    ]);\n    const findFuzzyTz = (zone)=>{\n        var _a, _b;\n        let currentTime;\n        try {\n            currentTime = (currentDatetime ? (0,spacetime__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(currentDatetime) : spacetime__WEBPACK_IMPORTED_MODULE_2__[\"default\"].now()).goto(zone);\n        } catch (err) {\n            currentTime = (currentDatetime ? (0,spacetime__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(currentDatetime) : spacetime__WEBPACK_IMPORTED_MODULE_2__[\"default\"].now()).goto(\"GMT\");\n        }\n        return (_b = (_a = options.filter((tz)=>tz.offset === currentTime.timezone().current.offset).map((tz)=>{\n            let score = 0;\n            if (currentTime.timezones[tz.value.toLowerCase()] && !!currentTime.timezones[tz.value.toLowerCase()].dst === currentTime.timezone().hasDst) {\n                if (tz.value.toLowerCase().indexOf(currentTime.tz.substring(currentTime.tz.indexOf(\"/\") + 1)) !== -1) {\n                    score += 8;\n                }\n                if (tz.label.toLowerCase().indexOf(currentTime.tz.substring(currentTime.tz.indexOf(\"/\") + 1)) !== -1) {\n                    score += 4;\n                }\n                if (tz.value.toLowerCase().indexOf(currentTime.tz.substring(0, currentTime.tz.indexOf(\"/\"))) !== -1) {\n                    score += 2;\n                }\n                score += 1;\n            } else if (tz.value === \"GMT\") {\n                score += 1;\n            }\n            return {\n                tz,\n                score\n            };\n        }).sort((a, b)=>b.score - a.score)) == null ? void 0 : _a[0]) == null ? void 0 : _b.tz;\n    };\n    function isObject(item) {\n        return typeof item === \"object\" && !Array.isArray(item) && item !== null;\n    }\n    const parseTimezone = (zone)=>{\n        if (typeof zone === \"string\") {\n            return options.find((tz)=>tz.value === zone) || zone.indexOf(\"/\") !== -1 && findFuzzyTz(zone);\n        } else if (isObject(zone) && !zone.label) {\n            return options.find((tz)=>tz.value === zone.value);\n        } else {\n            return zone;\n        }\n    };\n    return {\n        options,\n        parseTimezone\n    };\n}\nvar TimezoneSelect = (_a)=>{\n    var _b = _a, { value, onBlur, onChange, labelStyle, displayValue, timezones, currentDatetime } = _b, props = __objRest(_b, [\n        \"value\",\n        \"onBlur\",\n        \"onChange\",\n        \"labelStyle\",\n        \"displayValue\",\n        \"timezones\",\n        \"currentDatetime\"\n    ]);\n    const { options, parseTimezone } = useTimezoneSelect({\n        timezones,\n        labelStyle,\n        displayValue,\n        currentDatetime\n    });\n    const handleChange = (tz)=>{\n        onChange && onChange(tz);\n    };\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(react_select__WEBPACK_IMPORTED_MODULE_4__[\"default\"], __spreadValues({\n        value: parseTimezone(value),\n        onChange: handleChange,\n        options,\n        onBlur\n    }, props));\n};\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/react-timezone-select/dist/index.js\n");

/***/ })

};
;