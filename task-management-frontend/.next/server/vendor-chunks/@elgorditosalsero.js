"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@elgorditosalsero";
exports.ids = ["vendor-chunks/@elgorditosalsero"];
exports.modules = {

/***/ "(ssr)/./node_modules/@elgorditosalsero/react-gtm-hook/dist/react-gtm-hook.esm.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@elgorditosalsero/react-gtm-hook/dist/react-gtm-hook.esm.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GTMContext: () => (/* binding */ GTMContext),\n/* harmony export */   GTMContextDispatch: () => (/* binding */ GTMContextDispatch),\n/* harmony export */   GTMProvider: () => (/* binding */ GTMProvider),\n/* harmony export */   initialState: () => (/* binding */ initialState),\n/* harmony export */   sendToGTM: () => (/* binding */ sendToGTM),\n/* harmony export */   useGTMDispatch: () => (/* binding */ useGTMDispatch)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\nvar DEFAULT_DOMAIN = 'https://www.googletagmanager.com';\nvar DEFAULT_SCRIPT_NAME = 'gtm.js';\n/**\r\n * Function to get and set dataLayer\r\n * @param dataLayer - The dataLayer\r\n * @param dataLayerName - The dataLayer name\r\n */\nvar getDataLayerSnippet = function getDataLayerSnippet(dataLayer, dataLayerName) {\n  if (dataLayerName === void 0) {\n    dataLayerName = 'dataLayer';\n  }\n  return \"window.\" + dataLayerName + \" = window.\" + dataLayerName + \" || [];\" + (dataLayer ? \"window.\" + dataLayerName + \".push(\" + JSON.stringify(dataLayer) + \")\" : '');\n};\n/**\r\n * Function to get the Iframe snippet\r\n * @param environment - The parameters to use a custom environment\r\n * @param customDomain - Custom domain for gtm\r\n * @param id - The id of the container\r\n */\nvar getIframeSnippet = function getIframeSnippet(id, environment, customDomain) {\n  if (customDomain === void 0) {\n    customDomain = DEFAULT_DOMAIN;\n  }\n  var params = \"\";\n  if (environment) {\n    var gtm_auth = environment.gtm_auth,\n      gtm_preview = environment.gtm_preview;\n    params = \"&gtm_auth=\" + gtm_auth + \"&gtm_preview=\" + gtm_preview + \"&gtm_cookies_win=x\";\n  }\n  return \"<iframe src=\\\"\" + customDomain + \"/ns.html?id=\" + id + params + \"\\\" height=\\\"0\\\" width=\\\"0\\\" style=\\\"display:none;visibility:hidden\\\" id=\\\"tag-manager\\\"></iframe>\";\n};\n/**\r\n * Function to get the GTM script\r\n * @param dataLayerName - The name of the dataLayer\r\n * @param customDomain - Custom domain for gtm\r\n * @param customScriptName - Custom script file name for gtm\r\n * @param environment - The parameters to use a custom environment\r\n * @param id - The id of the container\r\n */\nvar getGTMScript = function getGTMScript(dataLayerName, id, environment, customDomain, customScriptName) {\n  if (customDomain === void 0) {\n    customDomain = DEFAULT_DOMAIN;\n  }\n  if (customScriptName === void 0) {\n    customScriptName = DEFAULT_SCRIPT_NAME;\n  }\n  var params = \"\";\n  if (environment) {\n    var gtm_auth = environment.gtm_auth,\n      gtm_preview = environment.gtm_preview;\n    params = \"+\\\"&gtm_auth=\" + gtm_auth + \"&gtm_preview=\" + gtm_preview + \"&gtm_cookies_win=x\\\"\";\n  }\n  return \"\\n    (function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':\\n      new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],\\n      j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=\\n      '\" + customDomain + \"/\" + customScriptName + \"?id='+i+dl\" + params + \";f.parentNode.insertBefore(j,f);\\n    })(window,document,'script','\" + dataLayerName + \"','\" + id + \"');\\n  \";\n};\n\n/**\r\n * Function to setup the Google Tag Manager\r\n * @param params - The snippets params\r\n */\nvar setupGTM = function setupGTM(params) {\n  var getDataLayerScript = function getDataLayerScript() {\n    var dataLayerScript = document.createElement('script');\n    if (params.nonce) {\n      dataLayerScript.setAttribute('nonce', params.nonce);\n    }\n    dataLayerScript.innerHTML = getDataLayerSnippet(params.dataLayer, params.dataLayerName);\n    return dataLayerScript;\n  };\n  var getNoScript = function getNoScript() {\n    var noScript = document.createElement('noscript');\n    noScript.innerHTML = getIframeSnippet(params.id, params.environment, params.customDomain);\n    return noScript;\n  };\n  var getScript = function getScript() {\n    var script = document.createElement('script');\n    if (params.nonce) {\n      script.setAttribute('nonce', params.nonce);\n    }\n    script.innerHTML = getGTMScript(params.dataLayerName, params.id, params.environment, params.customDomain, params.customScriptName);\n    return script;\n  };\n  return {\n    getDataLayerScript: getDataLayerScript,\n    getNoScript: getNoScript,\n    getScript: getScript\n  };\n};\n/**\r\n * Function to init the GTM\r\n * @param dataLayer - The dataLayer\r\n * @param dataLayerName - The dataLayer name\r\n * @param environment - Specify the custom environment to use\r\n * @param nonce - Server-generated nonce\r\n * @param id - The ID of the GTM\r\n */\nvar initGTM = function initGTM(_ref) {\n  var dataLayer = _ref.dataLayer,\n    dataLayerName = _ref.dataLayerName,\n    environment = _ref.environment,\n    nonce = _ref.nonce,\n    id = _ref.id,\n    customDomain = _ref.customDomain,\n    customScriptName = _ref.customScriptName;\n  var gtm = setupGTM({\n    dataLayer: dataLayer,\n    dataLayerName: dataLayerName,\n    environment: environment,\n    nonce: nonce,\n    id: id,\n    customDomain: customDomain,\n    customScriptName: customScriptName\n  });\n  var dataLayerScript = gtm.getDataLayerScript();\n  var script = gtm.getScript();\n  var noScript = gtm.getNoScript();\n  document.head.insertBefore(dataLayerScript, document.head.childNodes[0]);\n  document.head.insertBefore(script, document.head.childNodes[1]);\n  document.body.insertBefore(noScript, document.body.childNodes[0]);\n};\n/**\r\n * Function to send the events to the GTM\r\n * @param dataLayerName - The dataLayer name\r\n * @param data - The data to push\r\n */\nvar sendToGTM = function sendToGTM(_ref2) {\n  var dataLayerName = _ref2.dataLayerName,\n    data = _ref2.data;\n  if (window[dataLayerName]) {\n    window[dataLayerName].push(data);\n  } else {\n    console.warn(\"dataLayer \" + dataLayerName + \" does not exist, has script be initialized\");\n  }\n};\n\n/**\r\n * The initial state\r\n */\nvar initialState = {\n  dataLayer: undefined,\n  dataLayerName: 'dataLayer',\n  environment: undefined,\n  nonce: undefined,\n  id: '',\n  injectScript: true\n};\n/**\r\n * The context\r\n */\nvar GTMContext = /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)(initialState);\nvar GTMContextDispatch = /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)(undefined);\nfunction dataReducer(state, data) {\n  sendToGTM({\n    data: data,\n    dataLayerName: state == null ? void 0 : state.dataLayerName\n  });\n  return state;\n}\n/**\r\n * The Google Tag Manager Provider\r\n */\nfunction GTMProvider(_ref) {\n  var state = _ref.state,\n    children = _ref.children;\n  var _useReducer = (0,react__WEBPACK_IMPORTED_MODULE_0__.useReducer)(dataReducer, _extends({}, initialState, state)),\n    store = _useReducer[0],\n    dispatch = _useReducer[1];\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function () {\n    if (!state || state.injectScript == false) return;\n    var mergedState = _extends({}, store, state);\n    initGTM(mergedState);\n  }, [JSON.stringify(state)]);\n  return react__WEBPACK_IMPORTED_MODULE_0___default().createElement(GTMContext.Provider, {\n    value: store\n  }, react__WEBPACK_IMPORTED_MODULE_0___default().createElement(GTMContextDispatch.Provider, {\n    value: dispatch\n  }, children));\n}\nfunction useGTMDispatch() {\n  var context = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(GTMContextDispatch);\n  if (context === undefined) {\n    throw new Error('dispatchGTMEvent must be used within a GTMProvider');\n  }\n  return context;\n}\n\n\n//# sourceMappingURL=react-gtm-hook.esm.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@elgorditosalsero/react-gtm-hook/dist/react-gtm-hook.esm.js\n");

/***/ })

};
;